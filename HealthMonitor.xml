<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE muclient>
<!-- Saved on Thursday, February 18, 2016, 8:02 AM -->
<!-- MuClient version 4.98 -->

<!-- Plugin "HealthMonitor" generated by Plugin Wizard -->

<muclient>
<plugin
   name="HealthMonitor"
   author="Sonet"
   id="3266722ae41fa7305dd3cc23"
   language="Lua"
   purpose="Plays a sound if health is low"
   save_state="y"
   date_written="2016-02-18 08:00:52"
   requires="4.98"
   version="1.0"
   >
<description trim="n">
<![CDATA[
Commands:

HM Start
        -- Starts the Program, not needed on a fresh install
HM Stop
        -- Stops the Program from running
HM SetBreak
        -- Sets the breakpoint in percent, ie. .10 is 10% .5 is 50%, default is 30%
HM SetTime
        -- Sets the time in between the annoying sound firing, default is 3 seconds

]]>
</description>
</plugin>
<aliases>
<alias match="^(?:HM) help$"
    enabled="y"
    sequence="100"
    send_to="12"
    regexp="y"
    keep_evaluating="y"   
  >
  <send>
    ColourNote("MediumSeaGreen", "", GetPluginInfo (GetPluginID (), 3))
  </send>
  </alias>
  <alias
   match="^HM Stop$"
   enabled="y"
   regexp="y"
   send_to="12"
   sequence="100"
   script="killPlayBack"
  >
  </alias>
  <alias
   match="^HM Start$"
   enabled="y"
   regexp="y"
   send_to="12"
   sequence="100"
   script="startAgain"
  >
  </alias>
  <alias
   match="^HM SetTime (.*?)$"
   enabled="y"
   regexp="y"
   send_to="12"
   sequence="100"
   script="SetTime"
  >
  </alias>
  <alias
   match="^HM SetBreak (.*?)$"
   enabled="y"
   regexp="y"
   send_to="12"
   sequence="100"
   script="SetBreak"
  >
  </alias>
</aliases>

<!--  Get our standard constants -->

<include name="constants.lua"/>

<!--  Script  -->


<script>
<![CDATA[
curClasses= {}
require "tprint"
require "gmcphelper"
 
local stats
local timerbool = true
local timerbool1 = true
local timeToPlay = tonumber(3)
local breakPoint = tonumber(.3)

function OnPluginBroadcast (msg, id, name, text)
  if ( id == "3e7dedbe37e44942dd46d264") then
    res, gmcparg = CallPlugin("3e7dedbe37e44942dd46d264","gmcpval","char") --- We just want the gmcp.char section.
   -- Note (gmcparg.. " Test") 
    if (gmcparg == "")
      then
      return
    end -- if
    luastmt = "gmcpdata = " .. gmcparg --- Convert the serialized string back into a lua table.
    assert (loadstring (luastmt or "")) ()
    --tprint (gmcpdata)
    stats = gmcpdata
    if (gmcpdata.vitals ==nil or gmcpdata.maxstats == nil) then
      return
    end
    if (gmcpdata ~= nil) then
      curHp = gmcpdata.vitals.hp
      maxHp = gmcpdata.maxstats.maxhp
      curMana = gmcpdata.vitals.mana
      maxMana = gmcpdata.maxstats.maxmana
     -- Note(curHp)
      --Note(maxHp)
      --Note(gmcpdata.status.pos)
      if (string.find(gmcpdata.status.pos, "Fighting")) then
        if (curHp/maxHp < breakPoint and timerbool) then
          Sound (GetInfo(tonumber(66)).."\\sounds\\beep-01.wav") 
         --DoAfterSpecial(5,"timerbool = true",12)
          AddTimer ("wait", 0, 0, timeToPlay, "",
                   timer_flag.Enabled + timer_flag.Replace,
                   "doAfterWait")
          timerbool = false
        end
        if (curMana/maxMana < breakPoint and timerbool1) then
          Sound (GetInfo(tonumber(66)).."\\sounds\\beep-01.wav") 
         --DoAfterSpecial(5,"timerbool = true",12)
          AddTimer ("wait1", 0, 0, timeToPlay, "",
                   timer_flag.Enabled + timer_flag.Replace,
                   "doAfterWait1")
          timerbool1 = false
        end
      end
    end
  end
end

function doAfterWait()
 timerbool = true
end
function doAfterWait1()
 timerbool1 = true
end
function SetTime(name, lines, wildcards)
  timeToPlay = tonumber(wildcards[1])
  Note("Time set to ".. timeToPlay)
end
function SetBreak(name, lines, wildcards)
  breakPoint= tonumber(wildcards[1])
  Note("Break Point set to ".. breakPoint)
end
function killPlayBack()
  EnableTimer ("wait", false)
  EnableTimer ("wait1", false)
  timerbool = false
  timerbool = false
end
function startAgain()
  timerbool = true
  timerbool = true
end
]]>
</script>


</muclient>
